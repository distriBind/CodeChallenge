// <auto-generated />
using System;
using Mezo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mezo.Data.Migrations
{
    [DbContext(typeof(MezoDbContext))]
    [Migration("20231002194529_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Mezo.Data.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Mezo.Data.Entities.Courier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefaultCourier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Couriers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cost = 3.99m,
                            IsDefaultCourier = true,
                            Name = "Royal Mail"
                        },
                        new
                        {
                            Id = 2L,
                            Cost = 5.99m,
                            IsDefaultCourier = false,
                            Name = "Panda Parcels"
                        });
                });

            modelBuilder.Entity("Mezo.Data.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Mezo.Data.Entities.DeliveryArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("CanDeliver")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CourierId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.ToTable("DeliveryAreas");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AreaName = "Cornwall",
                            CanDeliver = false
                        },
                        new
                        {
                            Id = 2L,
                            AreaName = "Exeter",
                            CanDeliver = false
                        },
                        new
                        {
                            Id = 3L,
                            AreaName = "Watford",
                            CanDeliver = false
                        },
                        new
                        {
                            Id = 4L,
                            AreaName = "Scotland",
                            CanDeliver = false
                        },
                        new
                        {
                            Id = 5L,
                            AreaName = "Croydon",
                            CanDeliver = true,
                            CourierId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            AreaName = "Thorton Heath",
                            CanDeliver = true,
                            CourierId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            AreaName = "Dartford",
                            CanDeliver = true,
                            CourierId = 2L
                        });
                });

            modelBuilder.Entity("Mezo.Data.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mezo.Data.Entities.Customer", b =>
                {
                    b.HasOne("Mezo.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Mezo.Data.Entities.DeliveryArea", b =>
                {
                    b.HasOne("Mezo.Data.Entities.Courier", "Courier")
                        .WithMany()
                        .HasForeignKey("CourierId");

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("Mezo.Data.Entities.Order", b =>
                {
                    b.HasOne("Mezo.Data.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Mezo.Data.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
